@page "/alumno/{id:int}"
@inject HttpClient Http
@inject IConfiguration Configuration

<PageTitle>Editar alumno</PageTitle>

@if (alumno == null)
{
    <p><em>Loading...</em></p>
}
else
{
        <div class="form-group row">
            <label class="col-md-3 col-form-label">Nombre</label>
            <div class="col-md-9">
                <input type="text" autocomplete="off" asp-for="Nombre" name="Nombre" class="form-control">
                <span asp-validation-for="Nombre" class="text-danger"></span>@alumno.Nombre
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-3 col-form-label">Apellidos</label>
            <div class="col-md-9">
                <input type="text" autocomplete="off" asp-for="Apellidos" name="Apellidos" class="form-control">
                <span asp-validation-for="Apellidos" class="text-danger"></span>@alumno.Apellidos
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-3 col-form-label">Género</label>
            <div class="col-md-9">
                <input type="text" autocomplete="off" asp-for="Genero" name="Genero" class="form-control">
                <span asp-validation-for="Genero" class="text-danger"></span>@alumno.Genero
            </div>
        </div>
        <div class="form-group row">
            <label class="col-md-3 col-form-label">Fecha de Nacimiento</label>
            <div class="col-md-9">
                <input type="date" autocomplete="off" asp-for="FechaNacimiento" 
                    name="FechaNacimiento" class="form-control" />
                <span asp-validation-for="FechaNacimiento" class="text-danger"></span>@alumno.FechaNacimiento
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
            </div>
        </div>
        <div class="form-group justify-content-between">
            <button type="button" class="btn btn-secondary close-button" data-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-primary save-button">Save</button>
        </div>

    

}

@code {
    [Parameter]
    public int idAlumno { get; set; }

    private Contract.Alumnos? estudiantes;
    private Contract.Alumno[]? alumnos;
    private Contract.Alumno? alumno;
    private string? _baseAddress;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _baseAddress = Configuration.GetSection("ApiBaseAddress").Value;
            estudiantes = await Http.GetFromJsonAsync<Contract.Alumnos>($"{_baseAddress}/Alumno");
            alumnos = estudiantes!.alumnos;
            alumno = alumnos.FirstOrDefault(alumno => alumno.Id.Equals(idAlumno));
        }
        catch (Exception ex)
        {
            throw ex;
        }
    }
    private void Editar(int id)
    {
        var alumno = alumnos!.FirstOrDefault(alumno => alumno.Id.Equals(id));
    }
}
